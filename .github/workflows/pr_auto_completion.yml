name: "Auto PR Description"

on:
  pull_request:
    pull_request:
      types: [opened, synchronize]
    workflow_dispatch:
      inputs:
        pr_number:
          description: 'PR 번호 (수동 실행용)'
          required: true

permissions:
  pull-requests: write

jobs:
  update-pr-description:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate PR description
        id: generate_body
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const inputPrNumber = core.getInput('pr_number');
            const prNumber = inputPrNumber
              ? parseInt(inputPrNumber)
              : context.payload.pull_request.number;

            const commits = await github.paginate(
              github.rest.pulls.listCommits,
              {
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber
              }
            );
            const performed = new Set();
            const commitMessages = [];
            const issues = new Set();

            console.log('[Commits found]\n' + commits);

            commits.forEach(({ commit }) => {
              // 첫 줄만 사용
              const line = commit.message.split('\n')[0];
              const pattern = /^(\w+)(?:\([^)]+\))?: (.+?) (#\d+)$/;
              const m = line.match(pattern);
              if (m) {
                let [_, type, title, issue] = m;
                performed.add(type);
                commitMessages.push({ type: type, title: title });
                issues.add(issue);
              }
            });

            // 수행한 작업 리스트 작성
            const 작업 = Array.from(performed)
              .map(type => {
                const titles = commitMessages
                  .filter(msg => msg.type === type)
                  .map(msg => `- ${msg.title}`);
                return `### ${type}\n${titles.join('\n')}`;
              })
              .join('\n');
            const 이슈목록 = Array.from(issues)
              .map(issueNumber => `- ${issueNumber}`)
              .join('\n');

            return `## 수행한 작업\n${작업}\n\n## 설명\n\n## 관련 이슈\n${이슈목록}`;

      - name: Update PR description
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              body: ${{ steps.generate_body.outputs.result }}
            });
